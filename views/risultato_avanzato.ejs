<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= pacchetto.nome %> - Risultati Analisi | MicroInsight</title>
    <link rel="stylesheet" href="/css/style.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=Montserrat:wght@500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/marked/4.0.2/marked.min.js"></script>

    <style>
        /* Stili generali */
        .page-header {
            color: white;
            padding: 3rem 0;
        }
        
        .page-header h1 {
            font-size: 2rem;
            margin-bottom: 0.5rem;
            color: white;
        }
        
        .breadcrumbs {
            font-size: 0.875rem;
            opacity: 0.8;
        }
        
        .breadcrumbs a {
            color: white;
        }
        
        .action-bar {
            display: flex;
            justify-content: space-between;
            margin-bottom: 2rem;
        }
        
        .action-buttons {
            display: flex;
            gap: 0.75rem;
        }
        
        .results-container {
            display: grid;
            grid-template-columns: 300px 1fr;
            gap: 2rem;
        }
        
        .sidebar {
            display: flex;
            flex-direction: column;
            gap: 1.5rem;
        }
        
        .image-card, .info-card, .toc-card, .actions-card {
            background-color: white;
            border-radius: 12px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
            overflow: hidden;
        }
        
        .sidebar-title {
            font-size: 1.125rem;
            padding: 1rem 1.5rem;
            margin: 0;
            background-color: #f8fafc;
            border-bottom: 1px solid #e2e8f0;
        }
        
        .image-container {
            padding: 1rem;
            text-align: center;
        }
        
        .image-container img {
            max-width: 100%;
            max-height: 300px;
            border-radius: 8px;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);
            object-fit: contain;
        }
        
        .info-item {
            padding: 0.75rem 1.5rem;
            display: flex;
            border-bottom: 1px solid #f1f5f9;
        }
        
        .info-label {
            font-weight: 500;
            width: 40%;
            color: #475569;
        }
        
        .info-value {
            width: 60%;
        }
        
        .action-button-group {
            padding: 1rem 1.5rem;
            display: flex;
            flex-direction: column;
            gap: 0.75rem;
        }
        
        .btn-block {
            width: 100%;
        }
        
        .main-content {
            background-color: white;
            border-radius: 12px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
            overflow: hidden;
        }
        
        .report-header {
            padding: 1.5rem 2rem;
            border-bottom: 1px solid #e2e8f0;
            background-color: #f8fafc;
        }
        
        .report-title {
            font-size: 1.75rem;
            margin: 0 0 0.5rem;
            color: #1e40af;
        }
        
        .report-date {
            color: #64748b;
            font-size: 0.875rem;
        }
        
        /* Stili per il report interattivo avanzato */
        .section-container {
            margin-bottom: 1.5rem;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
            border: 1px solid rgba(59, 130, 246, 0.1);
            transition: all 0.3s ease;
        }
        
        .section-title {
            font-size: 1.5rem;
            padding: 1.25rem 1.5rem;
            margin: 0;
            background: linear-gradient(135deg, #3b82f6, #1d4ed8);
            color: white;
            cursor: pointer;
            display: flex;
            align-items: center;
            transition: all 0.3s ease;
            border-radius: 12px 12px 0 0;
            position: relative;
        }
        
        .section-title:after {
            content: "\f107"; /* FontAwesome down arrow */
            font-family: "Font Awesome 5 Free";
            font-weight: 900;
            position: absolute;
            right: 1.5rem;
            transition: transform 0.3s ease;
        }
        
        .section-container.collapsed .section-title:after {
            transform: rotate(-180deg);
        }
        
        .section-title:hover {
            background: linear-gradient(135deg, #2563eb, #1e40af);
        }
        
        .section-icon {
            margin-right: 1rem;
            display: flex;
            align-items: center;
            justify-content: center;
            width: 40px;
            height: 40px;
            background-color: rgba(255, 255, 255, 0.2);
            border-radius: 50%;
        }
        
        .section-content {
            background-color: white;
            padding: 0;
            max-height: 5000px;
            overflow: hidden;
            transition: max-height 0.5s ease, padding 0.3s ease;
        }
        
        .section-container.collapsed .section-content {
            max-height: 0;
            padding: 0;
        }
        
        .section-inner {
            padding: 1.5rem;
        }
        
        /* Stile per le sottosezioni */
        .subsection-card {
            margin-bottom: 1.5rem;
            padding: 1.5rem;
            border-radius: 8px;
            background-color: #f8fafc;
            border-left: 4px solid #3b82f6;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);
            position: relative;
        }
        
        .subsection-title {
            font-size: 1.25rem;
            margin-top: 0;
            margin-bottom: 1rem;
            color: #1e40af;
            padding-bottom: 0.5rem;
            border-bottom: 1px solid rgba(59, 130, 246, 0.2);
            display: flex;
            align-items: center;
            position: relative;
        }
        
        .subsection-title i {
            margin-right: 0.75rem;
            color: #3b82f6;
        }
        
        /* Stilizzazione della palette di colori */
        .color-palette {
            display: flex;
            flex-wrap: wrap;
            gap: 1rem;
            margin: 1.5rem 0;
        }
        
        .color-card {
            width: calc(33.333% - 0.67rem);
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            margin-bottom: 0.5rem;
            transition: all 0.3s ease;
            cursor: pointer;
        }
        
        .color-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0,0,0,0.1);
        }
        
        .color-preview {
            height: 100px;
            width: 100%;
        }
        
        .color-info {
            background: white;
            padding: 0.75rem;
        }
        
        .color-name {
            font-weight: 600;
            margin-bottom: 0.25rem;
        }
        
        .color-hex {
            color: #64748b;
            font-family: monospace;
            font-size: 0.875rem;
        }
        
        .color-suggestion {
            font-size: 0.875rem;
            margin-top: 0.5rem;
            color: #334155;
        }
        
        /* Stile per il TOC */
        .toc-content {
            padding: 1rem 1.5rem;
            max-height: 350px;
            overflow-y: auto;
        }
        
        .toc-content ul {
            list-style: none;
            padding: 0;
            margin: 0;
        }
        
        .toc-content li {
            margin-bottom: 0.5rem;
        }
        
        .toc-content a {
            color: #475569;
            text-decoration: none;
            transition: all 0.2s;
            display: block;
            padding: 0.5rem 0.75rem;
            border-radius: 4px;
        }
        
        .toc-content a:hover {
            background-color: rgba(59, 130, 246, 0.1);
            color: #1d4ed8;
            transform: translateX(4px);
        }
        
        .toc-content .toc-h1 {
            font-weight: 600;
            color: #1e40af;
        }
        
        .toc-content .toc-h2 {
            padding-left: 1rem;
            font-size: 0.9rem;
        }
        
        /* Stile per abbinamenti */
        .outfit-combination {
            display: flex;
            gap: 10px;
            margin-bottom: 15px;
        }
        
        .outfit-color {
            width: 60px;
            height: 40px;
            border-radius: 4px;
            position: relative;
        }
        
        .outfit-color:after {
            content: "+";
            position: absolute;
            right: -10px;
            top: 50%;
            transform: translateY(-50%);
            color: #64748b;
            font-weight: bold;
        }
        
        .outfit-color:last-child:after {
            display: none;
        }

        /* Animazioni */
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .animated {
            animation: fadeIn 0.5s ease forwards;
        }

        /* Rating bars */
        .rating-container {
            margin: 1rem 0;
        }
        
        .rating-label {
            display: flex;
            justify-content: space-between;
            margin-bottom: 0.25rem;
        }
        
        .rating-label span {
            font-size: 0.875rem;
            color: #64748b;
        }
        
        .rating-bar {
            height: 8px;
            width: 100%;
            background-color: #e2e8f0;
            border-radius: 4px;
            overflow: hidden;
        }
        
        .rating-fill {
            height: 100%;
            background: linear-gradient(90deg, #3b82f6, #60a5fa);
            border-radius: 4px;
        }

        /* Responsive */
        @media (max-width: 768px) {
            .results-container {
                grid-template-columns: 1fr;
            }
            
            .color-card {
                width: calc(50% - 0.5rem);
            }
        }
        
        @media (max-width: 480px) {
            .color-card {
                width: 100%;
            }
        }
    </style>
</head>
<body>
    <header class="header">
        <div class="container header-container">
            <a href="/" class="logo">
                <i class="fas fa-brain logo-icon"></i>
                Micro<span>Insight</span>
            </a>
            <nav>
                <ul class="nav">
                    <li><a href="/" class="nav-link">Home</a></li>
                    <li><a href="/pacchetti" class="nav-link">Pacchetti</a></li>
                    <li><a href="/cronologia" class="nav-link">Le tue Analisi</a></li>
                    <li><a href="/#about" class="nav-link">Chi Siamo</a></li>
                    <li><a href="/#contact" class="nav-link">Contatti</a></li>
                </ul>
            </nav>
            <button class="mobile-menu-button">
                <i class="fas fa-bars"></i>
            </button>
        </div>
    </header>

    <div class="page-header" style="background: linear-gradient(135deg, #3b82f6, #1d4ed8);">
        <div class="container">
            <h1>Risultati dell'Analisi</h1>
            <div class="breadcrumbs">
                <a href="/">Home</a> &gt;
                <a href="/pacchetti">Pacchetti</a> &gt;
                <span><%= pacchetto.nome %></span>
            </div>
        </div>
    </div>

    <section class="content">
        <div class="container">
            <div class="action-bar">
                <div class="action-buttons">
                    <a href="/" class="btn btn-outline">
                        <i class="fas fa-home"></i> Home
                    </a>
                    <a href="/pacchetti" class="btn btn-outline">
                        <i class="fas fa-list"></i> Tutti i Pacchetti
                    </a>
                </div>
                <div class="action-buttons">
                    <button class="btn btn-outline" id="print-btn">
                        <i class="fas fa-print"></i> Stampa
                    </button>
                    <button class="btn btn-primary" id="download-pdf">
                        <i class="fas fa-download"></i> Scarica PDF
                    </button>
                </div>
            </div>

            <div class="results-container">
                <div class="sidebar">
                    <div class="image-card">
                        <h3 class="sidebar-title">Immagine Analizzata</h3>
                        <div class="image-container">
                            <img src="/uploads/<%= immagine.filename %>" alt="Immagine analizzata" id="analyzed-image">
                        </div>
                    </div>
                    
                    <div class="info-card">
                        <h3 class="sidebar-title">Dettagli Analisi</h3>
                        <div class="info-item">
                            <div class="info-label">Tipo</div>
                            <div class="info-value"><%= tipo %></div>
                        </div>
                        <div class="info-item">
                            <div class="info-label">Pacchetto</div>
                            <div class="info-value"><%= pacchetto.nome %></div>
                        </div>
                        <div class="info-item">
                            <div class="info-label">Data</div>
                            <div class="info-value"><%= new Date().toLocaleDateString('it-IT', { day: '2-digit', month: '2-digit', year: 'numeric' }) %></div>
                        </div>
                    </div>
                    
                    <div class="toc-card">
                        <h3 class="sidebar-title">Indice dei Contenuti</h3>
                        <div id="toc" class="toc-content"></div>
                    </div>
                    
                    <div class="actions-card">
                        <h3 class="sidebar-title">Azioni</h3>
                        <div class="action-button-group">
                            <a href="/pacchetti" class="btn btn-secondary btn-block">
                                <i class="fas fa-list"></i> Altri Pacchetti
                            </a>
                            <a href="/cronologia" class="btn btn-secondary btn-block">
                                <i class="fas fa-history"></i> Cronologia
                            </a>
                            <a href="/" class="btn btn-primary btn-block">
                                <i class="fas fa-plus"></i> Nuova Analisi
                            </a>
                        </div>
                    </div>
                </div>
                
                <div class="main-content">
                    <div class="report-header">
                        <h2 class="report-title"><%= pacchetto.nome %></h2>
                        <div class="report-date">Generato il <%= new Date().toLocaleDateString('it-IT', { day: '2-digit', month: '2-digit', year: 'numeric', hour: '2-digit', minute: '2-digit' }) %></div>
                    </div>
                    
                    <div id="report-content" class="report-content"></div>
                </div>
            </div>
        </div>
    </section>

    <section class="bg-light py-6">
        <div class="container">
            <h2 class="text-center mb-6">Analisi Correlate</h2>
            
            <div class="grid grid-3">
                <a href="/pacchetti" class="card related-card">
                    <div class="related-icon">
                        <i class="fas fa-brain"></i>
                    </div>
                    <h3>Profilo Psicologico</h3>
                    <p>Scopri i tratti dominanti della tua personalità e le dinamiche psicologiche sottostanti.</p>
                </a>
                
                <a href="/pacchetti" class="card related-card">
                    <div class="related-icon">
                        <i class="fas fa-chart-line"></i>
                    </div>
                    <h3>Analisi Evolutiva</h3>
                    <p>Confronta diverse fasi temporali per scoprire come evolvono le tue espressioni nel tempo.</p>
                </a>
                
                <a href="/pacchetti" class="card related-card">
                    <div class="related-icon">
                        <i class="fas fa-palette"></i>
                    </div>
                    <h3>Analisi Armocromia</h3>
                    <p>Identifica la tua stagione cromatica e la palette di colori che ti valorizza meglio.</p>
                </a>
            </div>
        </div>
    </section>

    <footer class="footer">
        <div class="container">
            <div class="footer-container">
                <div class="footer-section">
                    <h3>MicroInsight</h3>
                    <p>Analisi avanzata delle microespressioni e del linguaggio non verbale tramite intelligenza artificiale.</p>
                </div>
                
                <div class="footer-section">
                    <h3>Link Rapidi</h3>
                    <ul class="footer-links">
                        <li><a href="/">Home</a></li>
                        <li><a href="/pacchetti">Pacchetti</a></li>
                        <li><a href="/cronologia">Le tue Analisi</a></li>
                        <li><a href="/#about">Chi Siamo</a></li>
                        <li><a href="/#contact">Contatti</a></li>
                    </ul>
                </div>
                
                <div class="footer-section">
                    <h3>Servizi</h3>
                    <ul class="footer-links">
                        <li><a href="/pacchetti">Analisi Microespressioni</a></li>
                        <li><a href="/pacchetti">Profilo Psicologico</a></li>
                        <li><a href="/pacchetti">Consulenza d'Immagine</a></li>
                        <li><a href="/pacchetti">Analisi Evolutiva</a></li>
                        <li><a href="/pacchetti">Armocromia</a></li>
                    </ul>
                </div>
                
                <div class="footer-section">
                    <h3>Legali</h3>
                    <ul class="footer-links">
                        <li><a href="#">Privacy Policy</a></li>
                        <li><a href="#">Termini di Servizio</a></li>
                        <li><a href="#">Cookie Policy</a></li>
                    </ul>
                </div>
            </div>
            
            <div class="footer-bottom">
                <p>&copy; 2025 MicroInsight. Tutti i diritti riservati.</p>
            </div>
        </div>
    </footer>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Renderizza il contenuto markdown
            const analisiText = "<%= analisi.testoCompleto.replace(/\\/g, '\\\\').replace(/\"/g, '\\\"').replace(/\n/g, '\\n') %>";
            const analisiTipo = "<%= tipo %>";
            
        // Sistema di caricamento dinamico del visualizzatore
const loadVisualizer = (type, visualizzatore) => {
    // Usa il visualizzatore specificato, se disponibile, altrimenti usa il tipo normalizzato
    let visualizerName = 'default';
    
    if (visualizzatore && visualizzatore !== 'default' && visualizzatore !== '[null]') {
        visualizerName = visualizzatore;
        console.log(`Uso visualizzatore specificato: ${visualizzatore}`);
    } else {
        // Fallback: normalizza il tipo come nome visualizzatore
        visualizerName = type.toLowerCase()
            .replace(/[^a-z0-9]/g, '-')
            .replace(/-+/g, '-')
            .replace(/^-|-$/g, '');
        console.log(`Nessun visualizzatore specificato, uso normalizzato dal tipo: ${visualizerName}`);
    }
    
    console.log(`Tentativo di caricamento visualizzatore: ${visualizerName}`);
    
    // Prova a caricare il visualizzatore specifico
    const script = document.createElement('script');
    script.src = `/js/visualizers/${visualizerName}-visualizer.js`;
    script.onerror = () => {
        console.log(`Visualizzatore ${visualizerName} non trovato, uso quello predefinito`);
        // Carica il visualizzatore predefinito se quello specifico non esiste
        const defaultScript = document.createElement('script');
        defaultScript.src = '/js/visualizers/default-visualizer.js';
        document.body.appendChild(defaultScript);
    };
    script.onload = () => {
        console.log(`Visualizzatore ${visualizerName} caricato con successo`);
        // Se esiste una funzione di inizializzazione, chiamala
        if (typeof initVisualizer === 'function') {
            initVisualizer(analisiText, document.getElementById('report-content'));
        }
    };
    document.body.appendChild(script);
};
        
        // Carica il visualizzatore appropriato in base al tipo di analisi e al visualizzatore specificato
const visualizzatoreSelezionato = "<%= pacchetto.visualizzatore_id || '' %>";
console.log("Visualizzatore selezionato dal database:", visualizzatoreSelezionato);
loadVisualizer(analisiTipo, visualizzatoreSelezionato);
            
            try {
                // Pre-elaborazione del testo
                let processedText = analisiText.replace(/{\..*?}/g, '').replace(/¶/g, '');
                
                // Configurazione di marked
                marked.setOptions({
                    headerIds: true,
                    headerPrefix: 'section-'
                });
                
                // Identificare sezioni e sottosezioni
                const sections = [];
                const lines = processedText.split('\n');
                let currentSection = null;
                let currentSubsection = null;
                
                for (let i = 0; i < lines.length; i++) {
                    const line = lines[i].trim();
                    
                    if (line.startsWith('SEZIONE') || line.startsWith('# ')) {
                        const title = line.replace(/^SEZIONE \d+:?\s*|# /, '').trim();
                        currentSection = {
                            title: title,
                            subsections: [],
                            content: []
                        };
                        sections.push(currentSection);
                        currentSubsection = null;
                    } 
                    else if ((line.startsWith('## ') || /^[A-Z][A-Za-z\s]+:$/.test(line)) && currentSection) {
                        const title = line.replace(/^## |:$/, '').trim();
                        currentSubsection = {
                            title: title,
                            content: []
                        };
                        currentSection.subsections.push(currentSubsection);
                    } 
                    else if (currentSubsection) {
                        currentSubsection.content.push(line);
                    } 
                    else if (currentSection) {
                        currentSection.content.push(line);
                    }
                }

                // Determinare il tipo di analisi
                const analysisType = analisiTipo.toLowerCase().includes('armocromia') ? 'armocromia' : 
                                     analisiTipo.toLowerCase().includes('micro') ? 'microespressioni' :
                                     analisiTipo.toLowerCase().includes('psico') ? 'psicologica' : 'stile';
                
                // Generare HTML per ciascuna sezione
                let reportHTML = '';
                
                sections.forEach((section, index) => {
                    // Seleziona icona per la sezione
                    let sectionIcon = 'star';
                    if (section.title.toLowerCase().includes('colori')) sectionIcon = 'palette';
                    if (section.title.toLowerCase().includes('trucch')) sectionIcon = 'magic';
                    if (section.title.toLowerCase().includes('idee')) sectionIcon = 'lightbulb';
                    if (section.title.toLowerCase().includes('potere')) sectionIcon = 'bolt';
                    
                    reportHTML += `
                        <div class="section-container" id="section-${index}">
                            <h2 class="section-title">
                                <span class="section-icon"><i class="fas fa-${sectionIcon}"></i></span>
                                ${section.title}
                            </h2>
                            <div class="section-content">
                                <div class="section-inner">
                    `;
                    
                    // Contenuto principale della sezione
                    if (section.content.length > 0) {
                        const sectionContent = section.content.join('\n');
                        if (sectionContent.trim()) {
                            reportHTML += `<div class="section-main-content">${marked.parse(sectionContent)}</div>`;
                        }
                    }
                    
                    // Aggiungi sottosezioni
                    section.subsections.forEach((subsection, subIndex) => {
                        // Seleziona icona per la sottosezione
                        let subsectionIcon = 'info-circle';
                        const t = subsection.title.toLowerCase();
                        if (t.includes('sottotono')) subsectionIcon = 'adjust';
                        if (t.includes('stagione')) subsectionIcon = 'leaf';
                        if (t.includes('colori')) subsectionIcon = 'palette';
                        if (t.includes('metall')) subsectionIcon = 'coins';
                        if (t.includes('abbinamenti')) subsectionIcon = 'object-group';
                        if (t.includes('make-up') || t.includes('makeup')) subsectionIcon = 'brush';
                        if (t.includes('capelli')) subsectionIcon = 'cut';
                        if (t.includes('accessori')) subsectionIcon = 'gem';
                        
                        const subsectionContent = subsection.content.join('\n');
                        
                        reportHTML += `
                            <div class="subsection-card" id="subsection-${index}-${subIndex}">
                                <h3 class="subsection-title"><i class="fas fa-${subsectionIcon}"></i> ${subsection.title}</h3>
                        `;
                        
                        // Verifica se la sottosezione contiene colori
                        if (subsection.title.toLowerCase().includes('colori') && subsectionContent.includes('#')) {
                            reportHTML += `<div class="color-palette">`;
                            
                            // Estrai colori
                            const colorRegex = /([\w\s]+):\s*(#[A-Fa-f0-9]{6})\.\s*([^\.]+)\.\s*Consiglio:\s*([^\.]+)\./g;
                            let match;
                            let colorHTML = '';
                            
                            while ((match = colorRegex.exec(subsectionContent)) !== null) {
                                const colorName = match[1].trim();
                                const hexCode = match[2];
                                const description = match[3].trim();
                                const suggestion = match[4].trim();
                                
                                colorHTML += `
                                    <div class="color-card animated" style="animation-delay: ${subIndex * 0.1 + 0.1}s">
                                        <div class="color-preview" style="background-color: ${hexCode}"></div>
                                        <div class="color-info">
                                            <div class="color-name">${colorName}</div>
                                            <div class="color-hex">${hexCode}</div>
                                            <div class="color-suggestion">${suggestion}</div>
                                        </div>
                                    </div>
                                `;
                            }
                            
                            reportHTML += colorHTML || marked.parse(subsectionContent);
                            reportHTML += `</div>`;
                        } 
                        else if (subsection.title.toLowerCase().includes('abbinamenti')) {
                            // Gestisci abbinamenti di colori con +
                            let combinationsHTML = '';
                            
                            subsectionContent.split('\n').forEach(line => {
                                if (line.includes('+')) {
                                    const colors = line.split('+').map(c => c.trim());
                                    combinationsHTML += '<div class="outfit-combination">';
                                    
                                    for (let color of colors) {
                                        // Cerca di determinare un colore
                                        let colorHex = '#777777';
                                        
                                        if (color.toLowerCase().includes('verde')) colorHex = '#2e8b57';
                                        else if (color.toLowerCase().includes('blu')) colorHex = '#1e40af';
                                        else if (color.toLowerCase().includes('rosso')) colorHex = '#b91c1c';
                                        else if (color.toLowerCase().includes('giallo')) colorHex = '#fbbf24';
                                        else if (color.toLowerCase().includes('arancio')) colorHex = '#ea580c';
                                        else if (color.toLowerCase().includes('viola')) colorHex = '#7e22ce';
                                        else if (color.toLowerCase().includes('marrone')) colorHex = '#92400e';
                                        else if (color.toLowerCase().includes('grigio')) colorHex = '#64748b';
                                        else if (color.toLowerCase().includes('nero')) colorHex = '#000000';
                                        else if (color.toLowerCase().includes('bianco')) colorHex = '#ffffff';
                                        else if (color.toLowerCase().includes('beige')) colorHex = '#d8c3a5';
                                        
                                        combinationsHTML += `<div class="outfit-color" style="background-color: ${colorHex}" title="${color}"></div>`;
                                    }
                                    
                                    combinationsHTML += '</div>';
                                    combinationsHTML += `<p class="color-suggestion">${line}</p>`;
                                } else if (line.trim()) {
                                    combinationsHTML += `<p>${line}</p>`;
                                }
                            });
                            
                            reportHTML += combinationsHTML || marked.parse(subsectionContent);
                        } 
                        else {
                            // Altre sottosezioni con rendering standard
                            reportHTML += marked.parse(subsectionContent);
                        }
                        
                        reportHTML += `</div>`;
                    });
                    
                    reportHTML += `
                                </div>
                            </div>
                        </div>
                    `;
                });
                
                // Inserisci il contenuto nel DOM
                document.getElementById('report-content').innerHTML = reportHTML;
                
                // Crea indice dei contenuti
                const toc = document.getElementById('toc');
                const tocList = document.createElement('ul');
                
                sections.forEach((section, index) => {
                    // Seleziona icona per la sezione nell'indice
                    let sectionIcon = 'star';
                    if (section.title.toLowerCase().includes('colori')) sectionIcon = 'palette';
                    if (section.title.toLowerCase().includes('trucch')) sectionIcon = 'magic';
                    if (section.title.toLowerCase().includes('idee')) sectionIcon = 'lightbulb';
                    if (section.title.toLowerCase().includes('potere')) sectionIcon = 'bolt';
                    
                    const tocItem = document.createElement('li');
                    const tocLink = document.createElement('a');
                    tocLink.href = `#section-${index}`;
                    tocLink.className = 'toc-h1';
                    tocLink.innerHTML = `<i class="fas fa-${sectionIcon}"></i> ${section.title}`;
                    
                    tocItem.appendChild(tocLink);
                    
                    // Aggiungi sottosezioni al TOC
                    if (section.subsections.length > 0) {
                        const subList = document.createElement('ul');
                        
                        section.subsections.forEach((subsection, subIndex) => {
                            let subsectionIcon = 'info-circle';
                            const t = subsection.title.toLowerCase();
                            if (t.includes('sottotono')) subsectionIcon = 'adjust';
                            if (t.includes('stagione')) subsectionIcon = 'leaf';
                            if (t.includes('colori')) subsectionIcon = 'palette';
                            if (t.includes('metall')) subsectionIcon = 'coins';
                            if (t.includes('abbinamenti')) subsectionIcon = 'object-group';
                            if (t.includes('make-up') || t.includes('makeup')) subsectionIcon = 'brush';
                            if (t.includes('capelli')) subsectionIcon = 'cut';
                            if (t.includes('accessori')) subsectionIcon = 'gem';
                            
                            const subItem = document.createElement('li');
                            const subLink = document.createElement('a');
                            subLink.href = `#subsection-${index}-${subIndex}`;
                            subLink.className = 'toc-h2';
                            subLink.innerHTML = `<i class="fas fa-${subsectionIcon}"></i> ${subsection.title}`;
                            
                            subItem.appendChild(subLink);
                            subList.appendChild(subItem);
                        });
                        
                        tocItem.appendChild(subList);
                    }
                    
                    tocList.appendChild(tocItem);
                });
                
                toc.appendChild(tocList);
                
                // Implementa collassabilità delle sezioni
                const sectionTitles = document.querySelectorAll('.section-title');
                sectionTitles.forEach(title => {
                    title.addEventListener('click', function() {
                        const container = this.closest('.section-container');
                        
                        // Chiudi tutte le altre sezioni
                        document.querySelectorAll('.section-container').forEach(otherContainer => {
                            if (otherContainer !== container && !otherContainer.classList.contains('collapsed')) {
                                otherContainer.classList.add('collapsed');
                            }
                        });
                        
                        // Apri/chiudi questa sezione
                        container.classList.toggle('collapsed');
                        
                        // Scorri alla sezione se la stai aprendo
                        if (!container.classList.contains('collapsed')) {
                            setTimeout(() => {
                                container.scrollIntoView({ behavior: 'smooth', block: 'start' });
                            }, 300);
                        }
                    });
                });
                
                // Rendi le card dei colori interattive
                const colorCards = document.querySelectorAll('.color-card');
                colorCards.forEach(card => {
                    card.addEventListener('click', function() {
                        const hexCode = this.querySelector('.color-hex').textContent;
                        
                        // Copia il codice colore negli appunti
                        navigator.clipboard.writeText(hexCode).then(() => {
                            // Feedback visivo
                            this.style.transform = 'scale(1.05)';
                            
                            const tooltip = document.createElement('div');
                            tooltip.textContent = 'Codice colore copiato!';
                            tooltip.style.position = 'absolute';
                            tooltip.style.top = '-30px';
                            tooltip.style.left = '50%';
                            tooltip.style.transform = 'translateX(-50%)';
                            tooltip.style.backgroundColor = 'rgba(0, 0, 0, 0.8)';
                            tooltip.style.color = 'white';
                            tooltip.style.padding = '5px 10px';
                            tooltip.style.borderRadius = '4px';
                            tooltip.style.fontSize = '12px';
                            tooltip.style.zIndex = '1000';
                            tooltip.style.opacity = '0';
                            tooltip.style.transition = 'opacity 0.3s';
                            
                            this.style.position = 'relative';
                            this.appendChild(tooltip);
                            
                            setTimeout(() => tooltip.style.opacity = '1', 10);
                            setTimeout(() => tooltip.style.opacity = '0', 1500);
                            setTimeout(() => {
                                this.removeChild(tooltip);
                                this.style.transform = '';
                            }, 1800);
                        }).catch(err => {
                            console.error('Errore durante la copia:', err);
                        });
                    });
                });
                
                // Apri la prima sezione automaticamente
                if (sections.length > 0) {
                    const firstSection = document.querySelector('.section-container');
                    if (firstSection) {
                        firstSection.classList.remove('collapsed');
                    }
                }
                
            } catch (error) {
                console.error('Errore nel rendering:', error);
                document.getElementById('report-content').innerHTML = `
                    <div style="text-align: center; padding: 3rem;">
                        <i class="fas fa-exclamation-triangle" style="font-size: 3rem; color: #ef4444; margin-bottom: 1rem;"></i>
                        <h3>Si è verificato un errore nel rendering del contenuto</h3>
                        <p>Dettaglio: ${error.message}</p>
                        <button class="btn btn-primary" onclick="location.reload()" style="margin-top: 1rem;">Riprova</button>
                    </div>
                `;
            }
            
            // Attiva la stampa
            document.getElementById('print-btn').addEventListener('click', function() {
                window.print();
            });
            
            // Scarica come PDF
            document.getElementById('download-pdf').addEventListener('click', function() {
    // Prova a ottenere l'ID dall'input nascosto
    let id = document.getElementById('analysis-id')?.value;
    
    // Se non c'è, prova a ottenerlo dall'URL
    if (!id) {
        const urlParts = window.location.pathname.split('/');
        // L'ID potrebbe essere l'ultimo segmento dell'URL (es. /dettaglio/123)
        id = urlParts[urlParts.length - 1];
    }
    
    // Se ancora non abbiamo un ID, prova a cercarlo nei dati della pagina
    if (!id || id === '') {
        // Cerca un attributo data-id in qualche elemento della pagina
        const elements = document.querySelectorAll('[data-id]');
        if (elements.length > 0) {
            id = elements[0].getAttribute('data-id');
        }
    }
    
    if (id && id !== '') {
        window.location.href = '/download-pdf/' + id;
    } else {
        alert('Impossibile determinare l\'ID dell\'analisi. Assicurati di averla salvata prima di scaricarla.');
    }
});
        });
    </script>

    <%- include('partials/cookie-banner') %>
</body>
</html>